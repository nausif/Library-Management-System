//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library_Management_System_By_Nausif_AND_Mohsin.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Member
    {
        public Member()
        {
            this.Book_Borrow_Return = new HashSet<Book_Borrow_Return>();
        }
        
        [Display(Name = "Member ID")]
        public int Member_ID { get; set; }
        [Required]
        [Display(Name = "First Name")]
        public string Member_FirstName { get; set; }
        [Required]
        [Display(Name = "Last Name")]
        public string Member_LastName { get; set; }

        [Required]
        [StringLength(50, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Member_Password { get; set; }

        [Required(ErrorMessage = "Address is required")]
        [StringLength(70)]
        [Display(Name = "Address")]
        public string Member_Address { get; set; }


        [Display(Name = "Registered Date")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy/MM/dd}", ApplyFormatInEditMode = true)]
        public System.DateTime Member_Registered_Date { get; set; }

        [Display(Name = "Member Type ID")]
        public int Member_Type_ID { get; set; }

        [Display(Name = "Phone Number")]
        [DataType(DataType.PhoneNumber)]
        [RegularExpression(@"^((\+92-?)|0)?[0-9]{10}$", ErrorMessage = "Entered phone format is not valid.")]
        public string Member_Phone { get; set; }

        [Required(ErrorMessage = "Email is required")]
        [Display(Name = "Email Address")]
        [RegularExpression(@"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}", ErrorMessage = "Email is is not valid.")]
        [DataType(DataType.EmailAddress)]
        public string Member_Email { get; set; }

        [Required(ErrorMessage = "Gender is Required")]
        [Display(Name = "Gender")]
        public string Member_Gender { get; set; }

        [Required(ErrorMessage = "DOB is Required")]
        [Display(Name = "Date Of Birth")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:yyyy/MM/dd}", ApplyFormatInEditMode = true)]
        public System.DateTime Member_DOB { get; set; }

        public virtual ICollection<Book_Borrow_Return> Book_Borrow_Return { get; set; }
        public virtual Member_Type Member_Type { get; set; }
    }
}
